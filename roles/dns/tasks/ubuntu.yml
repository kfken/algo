- name: Get latest dnscrypt-proxy version
  uri:
    url: https://api.github.com/repos/DNSCrypt/dnscrypt-proxy/releases/latest
    return_content: true
  register: dnscrypt_version

- name: Download dnscrypt-proxy
  get_url:
    url: "https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/{{ dnscrypt_version.json.tag_name }}/dnscrypt-proxy-linux_{{ ansible_architecture }}-{{ dnscrypt_version.json.tag_name }}.tar.gz"
    dest: /tmp/

- name: Unarchive dnscrypt-proxy
  unarchive:
    copy: no
    src: /tmp/dnscrypt-proxy-linux_{{ ansible_architecture }}-{{ dnscrypt_version.json.tag_name }}.tar.gz
    dest: /opt
    owner: root
    group: "{{ root_group|default('root') }}"
    list_files: yes
  become: yes
  become_user: root
  register: dnscrypt_archive_contents

- name: Move dnscrypt-proxy into place
  command: "mv /opt/{{ dnscrypt_archive_contents.files[0].split('/')[0] }} /opt/dnscrypt-proxy"
  become: yes
  become_user: root
  changed_when: false

- name: dnscrypt-proxy update script added
  copy:
    src: dnscrypt-proxy-update.sh
    dest: /usr/local/sbin/dnscrypt-proxy-update.sh
    owner: root
    group: "{{ root_group|default('root') }}"
    mode: 0755

- name: Updater script added to cron
  cron:
    name: dnscrypt-proxy updater
    minute: "{{ range(0, 60) | random }}"
    hour: "{{ range(0, 24) | random }}"
    job: /usr/local/sbin/dnscrypt-proxy-update.sh
    user: root

- name: dnscrypt-proxy ip-blacklist configured
  template:
    src: ip-blacklist.txt.j2
    dest: "/opt/dnscrypt-proxy/ip-blacklist.txt"
  notify:
    - restart dnscrypt-proxy

- name: dnscrypt-proxy configured
  template:
    src: dnscrypt-proxy.toml.j2
    dest: "/opt/dnscrypt-proxy/dnscrypt-proxy.toml"
  notify:
    - restart dnscrypt-proxy

- block:
  - name: Ubuntu | Configure AppArmor policy for dnscrypt-proxy
    copy:
      src: apparmor.profile.dnscrypt-proxy
      dest: /etc/apparmor.d/opt.dnscrypt-proxy.dnscrypt-proxy
      owner: root
      group: root
      mode: 0600
    notify: restart dnscrypt-proxy

  - name: Ubuntu | Enforce the dnscrypt-proxy AppArmor policy
    command: aa-complain opt.dnscrypt-proxy.dnscrypt-proxy
    changed_when: false
  tags: apparmor
  when: apparmor_enabled|default(false)|bool

- name: Ubuntu | Ensure that the dnscrypt-proxy service directory exist
  file:
    path: /etc/systemd/system/dnscrypt-proxy.service.d/
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ubuntu | Add custom requirements to successfully start the unit
  copy:
    dest: /etc/systemd/system/dnscrypt-proxy.service.d/99-algo.conf
    content: |
      [Unit]
      After=systemd-resolved.service
      Requires=systemd-resolved.service

      [Service]
      AmbientCapabilities=CAP_NET_BIND_SERVICE
  notify:
   - restart dnscrypt-proxy
